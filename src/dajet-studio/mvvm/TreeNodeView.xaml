<UserControl x:Class="DaJet.Studio.MVVM.TreeNodeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mvvm="clr-namespace:DaJet.Studio.MVVM"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" d:DesignHeight="450" d:DesignWidth="800">

    <TreeView Grid.Row="1" x:Name="CONTROL_ROOT" ItemsSource="{Binding TreeNodes}"
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              BorderThickness="0" BorderBrush="Transparent"
              MouseMove="TreeView_MouseMove">
            
        <TreeView.Resources>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <Style TargetType="{x:Type TreeViewItem}">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                <Setter Property="Visibility" Value="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </Style>
        </TreeView.Resources>
        
        <behaviors:Interaction.Triggers>
            <behaviors:EventTrigger EventName="SelectedItemChanged" SourceObject="{Binding ElementName=CONTROL_ROOT}">
                <behaviors:InvokeCommandAction Command="{Binding SelectedItemChanged}" PassEventArgsToCommand="True"/>
            </behaviors:EventTrigger>
            <behaviors:EventTrigger EventName="KeyDown">
                <behaviors:InvokeCommandAction Command="{Binding TreeViewKeyDown}" PassEventArgsToCommand="True"/>
            </behaviors:EventTrigger>
        </behaviors:Interaction.Triggers>

        <TreeView.ItemTemplate>
            
            <HierarchicalDataTemplate DataType="{x:Type mvvm:TreeNodeViewModel}" ItemsSource="{Binding TreeNodes}">

                <StackPanel Orientation="Horizontal" Height="20">

                    <StackPanel.ContextMenu>
                        <mvvm:ContextMenuView ItemsSource="{Binding ContextMenuItems}"/>
                    </StackPanel.ContextMenu>

                    <Image Source="{Binding NodeIcon}" Height="16" Width="16" VerticalAlignment="Center"/>

                    <TextBlock x:Name="nodeNameTextBlock"
                               Visibility="{Binding IsViewModeEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                               Margin="3,0,3,0" VerticalAlignment="Center"
                               Text="{Binding NodeText}" ToolTip="{Binding NodeToolTip}">
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="PreviewMouseRightButtonDown">
                                <behaviors:ChangePropertyAction PropertyName="IsSelected" Value="True" TargetObject="{Binding}"/>
                            </behaviors:EventTrigger>
                            <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                                <behaviors:InvokeCommandAction Command="{Binding EnableEditingCommand}" PassEventArgsToCommand="True"/>
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                    </TextBlock>

                    <TextBox x:Name="nodeNameTextBox"
                             Text="{Binding NodeText, UpdateSourceTrigger=LostFocus, Mode=TwoWay}"
                             IsVisibleChanged="NodeNameTextBox_IsVisibleChanged"
                             Visibility="{Binding IsEditModeEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                             MinWidth="{Binding ElementName=nodeNameTextBlock, Path=ActualWidth}">
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="LostFocus">
                                <behaviors:InvokeCommandAction Command="{Binding TextBoxLostFocus}" PassEventArgsToCommand="True"/>
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                    </TextBox>

                </StackPanel>
                
            </HierarchicalDataTemplate>
            
        </TreeView.ItemTemplate>
            
    </TreeView>

</UserControl>